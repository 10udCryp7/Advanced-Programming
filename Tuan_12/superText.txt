class MyIntSet{
public:
    MyIntSet();
    MyIntSet(int a[], int n);
    ~MyIntSet();
    bool insertVal(int v);
    bool eraseVal(int v);
    void clearAll();
    bool findVal(int v) const;
    bool isEmpty() const;
    int getSize() const;
    const int* getBeginPtr() const;
    const int* getEndPtr() const;
private:
    int maxSize;
    int* elements;
    int num;
};


class MyIntSet{
public:
    MyIntSet():num(0){}

    MyIntSet(int a[], int n){
        if(n > MAX_SIZE) num = MAX_SIZE;
        else num = n;
        for(int i = 0; i < num; i++) elements[i] = a[i];
    }

    bool insertVal(int v);
    bool eraseVal(int v);
    void clearAll();
    bool findVal(int v) const;
    bool isEmpty() const;
    int getSize() const;
    const int* getBeginPtr() const;
    const int* getEndPtr() const;
private:
    static const int MAX_SIZE = 1000;
    int elements[MAX_SIZE];
    int num; // count real values in this set
};